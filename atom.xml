<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小浪博客</title>
  
  <subtitle>生活就像一场戏</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-20T06:51:28.108Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>小浪</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Oracle中锁表解决办法</title>
    <link href="http://yoursite.com/2018/08/09/sb_sql/"/>
    <id>http://yoursite.com/2018/08/09/sb_sql/</id>
    <published>2018-08-09T05:34:30.000Z</published>
    <updated>2018-08-20T06:51:28.108Z</updated>
    
    <content type="html"><![CDATA[<p>在最近的一次项目中，我发现for update查询数据的时候出现卡死的情况。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> res_base_field <span class="keyword">for</span> <span class="keyword">update</span>;</span><br></pre></td></tr></table></figure><h2 id="出现原因"><a href="#出现原因" class="headerlink" title="出现原因"></a>出现原因</h2><p>当修改表中数据，但是没有commit就关掉PL/SQL，下次再打开，执行带for update的sql语句，就会出现卡死的这种情况。</p><a id="more"></a><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="1-查看锁表进程"><a href="#1-查看锁表进程" class="headerlink" title="1.查看锁表进程"></a>1.查看锁表进程</h3><p>执行以下的SQL语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> v$<span class="keyword">session</span> t1, v$locked_object t2 <span class="keyword">where</span> t1.sid = t2.SESSION_ID;</span><br></pre></td></tr></table></figure><p>如果有锁表进程，就会显示出来。</p><h3 id="2-结束锁表进程"><a href="#2-结束锁表进程" class="headerlink" title="2.结束锁表进程"></a>2.结束锁表进程</h3><p>执行以下SQL语句即可解锁锁表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">system</span> <span class="keyword">kill</span> <span class="keyword">session</span> <span class="string">'SID值,serial#值'</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在最近的一次项目中，我发现for update查询数据的时候出现卡死的情况。&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;select&lt;/span&gt; * &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; res_base_field &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;出现原因&quot;&gt;&lt;a href=&quot;#出现原因&quot; class=&quot;headerlink&quot; title=&quot;出现原因&quot;&gt;&lt;/a&gt;出现原因&lt;/h2&gt;&lt;p&gt;当修改表中数据，但是没有commit就关掉PL/SQL，下次再打开，执行带for update的sql语句，就会出现卡死的这种情况。&lt;/p&gt;
    
    </summary>
    
      <category term="技术文章" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="SQL" scheme="http://yoursite.com/tags/SQL/"/>
    
      <category term="锁表" scheme="http://yoursite.com/tags/%E9%94%81%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>Guns框架——后台管理</title>
    <link href="http://yoursite.com/2018/07/31/guns/"/>
    <id>http://yoursite.com/2018/07/31/guns/</id>
    <published>2018-07-31T05:34:30.000Z</published>
    <updated>2018-08-20T07:10:17.786Z</updated>
    
    <content type="html"><![CDATA[<h2 id="guns框架简介"><a href="#guns框架简介" class="headerlink" title="guns框架简介"></a>guns框架简介</h2><p>Guns基于SpringBoot,致力于做更简洁的后台管理系统,完美整合springmvc + shiro + mybatis-plus + beetl + flowable!Guns项目代码简洁,注释丰富,上手容易, 同时Guns包含许多基础模块(用户管理,角色管理,部门管理,字典管理等10个模块),可以直接作为一个后台管理系统的脚手架.Guns v3.0新增rest api服务,提供对接服务端接口的支持,并利用jwt token鉴权机制给予客户端的访问权限,传输数据进行md5签名保证传输过程数据的安全性!<br><a id="more"></a></p><h2 id="guns框架下载和部署"><a href="#guns框架下载和部署" class="headerlink" title="guns框架下载和部署"></a>guns框架下载和部署</h2><p><strong>框架下载地址</strong></p><p><a href="https://gitee.com/naan1993/guns/" target="_blank" rel="noopener">https://gitee.com/naan1993/guns/</a><br>选择下图中的选择下载对应的框架ZIP包到本地<br><img src="/2018/07/31/guns/1.png" alt=""></p><p><strong>导入数据库</strong><br>打开Navicat for MySQL软件，建立guns数据库，再从刚才本地下载的文件中找到对应的数据库文件，路径如：guns-guns-admin-guns.sql,点击运行guns.sql文件，建立好数据库表。</p><p><strong>安装部署Maven</strong><br>作为一名开发者，这点我就不阐述了，自己找度娘。</p><h2 id="guns项目的运行"><a href="#guns项目的运行" class="headerlink" title="guns项目的运行"></a>guns项目的运行</h2><p><strong>修改数据库配置文件</strong><br>找到guns\guns-admin\src\main\resources下的application.yml文件，把相应的数据库配置信息修改为自己本地的数据库连接。</p><p><strong>运行GunsApplication启动类</strong><br>找到guns\guns-admin\src\main\java\com\stylefeng\guns下的GunsApplication.java文件，直接以java application方式运行，出现如下图就成功了。</p><p><strong>打开项目地址</strong><br>浏览器搜索localhost:80(80是application中的server port端口号，可自行配置)</p><h2 id="guns框架进阶"><a href="#guns框架进阶" class="headerlink" title="guns框架进阶"></a>guns框架进阶</h2><p>慕课网教学：<a href="https://www.imooc.com/learn/936" target="_blank" rel="noopener">https://www.imooc.com/learn/936</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;guns框架简介&quot;&gt;&lt;a href=&quot;#guns框架简介&quot; class=&quot;headerlink&quot; title=&quot;guns框架简介&quot;&gt;&lt;/a&gt;guns框架简介&lt;/h2&gt;&lt;p&gt;Guns基于SpringBoot,致力于做更简洁的后台管理系统,完美整合springmvc + shiro + mybatis-plus + beetl + flowable!Guns项目代码简洁,注释丰富,上手容易, 同时Guns包含许多基础模块(用户管理,角色管理,部门管理,字典管理等10个模块),可以直接作为一个后台管理系统的脚手架.Guns v3.0新增rest api服务,提供对接服务端接口的支持,并利用jwt token鉴权机制给予客户端的访问权限,传输数据进行md5签名保证传输过程数据的安全性!&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="技术文章" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="guns" scheme="http://yoursite.com/tags/guns/"/>
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>JAVA获取中文名字的首字母</title>
    <link href="http://yoursite.com/2018/07/31/szm/"/>
    <id>http://yoursite.com/2018/07/31/szm/</id>
    <published>2018-07-31T05:34:30.000Z</published>
    <updated>2018-08-20T06:48:54.521Z</updated>
    
    <content type="html"><![CDATA[<p>最近项目中要获取一个字段的首字母的值，所以就在网上找了下方法。本文转自：<br><a href="https://blog.csdn.net/leeyefang/article/details/9082255" target="_blank" rel="noopener">https://blog.csdn.net/leeyefang/article/details/9082255</a></p><ul><li>调用FirstLetterUtil类的getFirstLetter()方法，获取姓名的首字母。如：“阿鲁卓玛”获取首字母是“alzm”。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String firstLetter = FirstLetterUtil.getFirstLetter(“阿鲁卓玛”);</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li>FirstLetterUtil类。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FirstLetterUtil</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> BEGIN = <span class="number">45217</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> END = <span class="number">63486</span>;</span><br><span class="line">    <span class="comment">// 按照声母表示，这个表是在GB2312中的出现的第一个汉字，也就是说“啊”是代表首字母a的第一个汉字。</span></span><br><span class="line">    <span class="comment">// i, u, v都不做声母, 自定规则跟随前面的字母</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] chartable = &#123;<span class="string">'啊'</span>, <span class="string">'芭'</span>, <span class="string">'擦'</span>, <span class="string">'搭'</span>, <span class="string">'蛾'</span>, <span class="string">'发'</span>, <span class="string">'噶'</span>, <span class="string">'哈'</span>,</span><br><span class="line">        <span class="string">'哈'</span>, <span class="string">'击'</span>, <span class="string">'喀'</span>, <span class="string">'垃'</span>, <span class="string">'妈'</span>, <span class="string">'拿'</span>, <span class="string">'哦'</span>, <span class="string">'啪'</span>, <span class="string">'期'</span>, <span class="string">'然'</span>, <span class="string">'撒'</span>, <span class="string">'塌'</span>, <span class="string">'塌'</span>,</span><br><span class="line">        <span class="string">'塌'</span>, <span class="string">'挖'</span>, <span class="string">'昔'</span>, <span class="string">'压'</span>, <span class="string">'匝'</span>,&#125;;</span><br><span class="line">    <span class="comment">// 二十六个字母区间对应二十七个端点</span></span><br><span class="line">    <span class="comment">// GB2312码汉字区间十进制表示</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] table = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">27</span>];</span><br><span class="line">    <span class="comment">// 对应首字母区间表</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span>[] initialtable = &#123;<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>,</span><br><span class="line">        <span class="string">'h'</span>, <span class="string">'h'</span>, <span class="string">'j'</span>, <span class="string">'k'</span>, <span class="string">'l'</span>, <span class="string">'m'</span>, <span class="string">'n'</span>, <span class="string">'o'</span>, <span class="string">'p'</span>, <span class="string">'q'</span>, <span class="string">'r'</span>, <span class="string">'s'</span>, <span class="string">'t'</span>,</span><br><span class="line">        <span class="string">'t'</span>, <span class="string">'t'</span>, <span class="string">'w'</span>, <span class="string">'x'</span>, <span class="string">'y'</span>, <span class="string">'z'</span>,&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;</span><br><span class="line">            table[i] = gbValue(chartable[i]);<span class="comment">// 得到GB2312码的首字母区间端点表，十进制。</span></span><br><span class="line">        &#125;</span><br><span class="line">        table[<span class="number">26</span>] = END;<span class="comment">// 区间表结尾</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据一个包含汉字的字符串返回一个汉字拼音首字母的字符串 最重要的一个方法，思路如下：一个个字符读入、判断、输出</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getFirstLetter</span><span class="params">(String sourceStr)</span> </span>&#123;</span><br><span class="line">        String result = <span class="string">""</span>;</span><br><span class="line">        String str = sourceStr.toLowerCase();</span><br><span class="line">        <span class="keyword">int</span> StrLength = str.length();</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; StrLength; i++) &#123;</span><br><span class="line">                result += Char2Initial(str.charAt(i));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            result = <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 输入字符,得到他的声母,英文字母返回对应的大写字母,其他非简体汉字返回 '0'</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">char</span> <span class="title">Char2Initial</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 对英文字母的处理：小写字母转换为大写，大写的直接返回</span></span><br><span class="line">        <span class="keyword">if</span> (ch &gt;= <span class="string">'a'</span> &amp;&amp; ch &lt;= <span class="string">'z'</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (ch &gt;= <span class="string">'A'</span> &amp;&amp; ch &lt;= <span class="string">'Z'</span>) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> ch;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对非英文字母的处理：转化为首字母，然后判断是否在码表范围内，</span></span><br><span class="line">        <span class="comment">// 若不是，则直接返回。</span></span><br><span class="line">        <span class="comment">// 若是，则在码表内的进行判断。</span></span><br><span class="line">        <span class="keyword">int</span> gb = gbValue(ch);<span class="comment">// 汉字转换首字母</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((gb &lt; BEGIN) || (gb &gt; END))<span class="comment">// 在码表区间之前，直接返回</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> ch;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) &#123;<span class="comment">// 判断匹配码表区间，匹配到就break,判断区间形如“[,)”</span></span><br><span class="line">            <span class="keyword">if</span> ((gb &gt;= table[i]) &amp;&amp; (gb &lt; table[i + <span class="number">1</span>])) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (gb == END) &#123;<span class="comment">//补上GB2312区间最右端</span></span><br><span class="line">            i = <span class="number">25</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> initialtable[i]; <span class="comment">// 在码表区间中，返回首字母</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取出汉字的编码 cn 汉字</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">gbValue</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;<span class="comment">// 将一个汉字（GB2312）转换为十进制表示。</span></span><br><span class="line">        String str = <span class="keyword">new</span> String();</span><br><span class="line">        str += ch;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] bytes = str.getBytes(<span class="string">"GB2312"</span>);</span><br><span class="line">            <span class="keyword">if</span> (bytes.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> (bytes[<span class="number">0</span>] &lt;&lt; <span class="number">8</span> &amp; <span class="number">0xff00</span>) + (bytes[<span class="number">1</span>] &amp; <span class="number">0xff</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近项目中要获取一个字段的首字母的值，所以就在网上找了下方法。本文转自：&lt;br&gt;&lt;a href=&quot;https://blog.csdn.net/leeyefang/article/details/9082255&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/leeyefang/article/details/9082255&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;调用FirstLetterUtil类的getFirstLetter()方法，获取姓名的首字母。如：“阿鲁卓玛”获取首字母是“alzm”。&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String firstLetter = FirstLetterUtil.getFirstLetter(“阿鲁卓玛”);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="技术文章" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="首字母" scheme="http://yoursite.com/tags/%E9%A6%96%E5%AD%97%E6%AF%8D/"/>
    
      <category term="FirstLetterUtil" scheme="http://yoursite.com/tags/FirstLetterUtil/"/>
    
  </entry>
  
</feed>
